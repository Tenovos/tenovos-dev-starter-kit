AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Asset Layer Translations

Resources:
  DskProxyFunction_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'dsk-proxy-function-_CUSTOMERID_-_CUSTOMERNAME_-_DISAMBIGUATOR_'
      Handler: ./src/handlers/proxy.handler
      Runtime: nodejs16.x
      Timeout: 300
      MemorySize: 256
      ReservedConcurrentExecutions: 1
      Role: !GetAtt 'DskRole_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_.Arn'
      Events:
        Typescript:
          Type: Api
          Properties:
            Path: /proxy
            Method: any
      Environment:
        Variables:
          QUEUE_URL: !GetAtt 'DskQueue_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_.QueueUrl'
  DskFunction_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'dsk-function-_CUSTOMERID_-_CUSTOMERNAME_-_DISAMBIGUATOR_'
      Handler: ./src/handlers/handler.handler
      Runtime: nodejs16.x
      Timeout: 300
      MemorySize: 256
      ReservedConcurrentExecutions: 0
      Role: !GetAtt 'DskRole_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_.Arn'
      Events:
        QueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt 'DskQueue_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_.Arn'
            BatchSize: 1
      Environment:
        Variables:
          CUSTOMER_ID: '_CUSTOMERID_'
          PUBLISHING_ACCOUNT: '_PUBLISHING_ACCOUNT_'
  DskQueue_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_:
    Properties:
      DelaySeconds: 0
      MaximumMessageSize: 262144
      MessageRetentionPeriod: 1209600
      QueueName: '_CUSTOMERID_-_CUSTOMERNAME_-_DISAMBIGUATOR_'
      ReceiveMessageWaitTimeSeconds: 0
      VisibilityTimeout: 300
    Type: AWS::SQS::Queue
  DskRole_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - sqs:*            
                Resource: !GetAtt 'DskQueue_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_.Arn'
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: dsk-policy-_CUSTOMERID_-_CUSTOMERNAME_-_DISAMBIGUATOR_
      RoleName: dsk-role-_CUSTOMERID_-_CUSTOMERNAME_-_DISAMBIGUATOR_
    Type: AWS::IAM::Role
  PolicySQS_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_:
    Properties:
      PolicyDocument:
        Statement:
          - Action: SQS:*
            Effect: Allow
            Principal: '*'
            Resource: !GetAtt 'DskQueue_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_.Arn'
        Version: '2012-10-17'
      Queues:
        - !GetAtt 'DskQueue_CUSTOMERID__CUSTOMERNAME__DISAMBIGUATOR_.QueueName'
    Type: AWS::SQS::QueuePolicy
Outputs:
  ApiGatewayUrl:
    Description: 'URL created by for use with feature DSK'
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/proxy"